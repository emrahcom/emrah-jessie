  # First unpack MIME containers and reject serious errors.
  #
  deny  message   = This message contains a MIME error ($demime_reason)
        demime    = *
        condition = ${if >{$demime_errorlevel}{2}{1}{0}}

  # Reject typically wormish file extensions. There is almost no
  # sense in sending such files by email.
  # Note that you might want to change the list of extensions.
  #
  deny  message = This domain has a policy of not accepting certain types of attachments \
                  in mail as they may contain a virus.  This mail has a file with a .$found_extension \
                  attachment and is not accepted.  If you have a legitimate need to send \
                  this particular attachment, send it in a compressed archive, and it will \
                  then be forwarded to the recipient.
        demime  = ade:adep:adp:bas:bat:chm:cmd:cnf:com:cpl:crt:dll:hlp:hta:inf:ins:isp:js:jse:lnk:mad:maf:mag:mam:maq:mar:mas:mat:mav:maw:ocx:pcd:pif:reg:scf:scr:sct:vbe:vbs:wsc:wsf:wsh:url:xnk

  # Reject virus infested messages.
  #
  warn    message     = This message contains malware ($malware_name)
          malware     = *
          log_message = This message contains malware ($malware_name)

  # Reject messages with an "X-Spam-Flag: YES" header.
  #
  deny    message   = Sender openly considers message as spam (X-Spam-Flag header with a positive value was found).
          condition = ${if bool{$h_x-spam-flag:}{true}{false}}

  # Reject messages containing "viagra" in all kinds of whitespace/case combinations
  # WARNING: this is an example !
  #
  # deny    message = This message matches a blacklisted regular expression ($regex_match_string)
  #        regex   = [Vv] *[Ii] *[Aa] *[Gg] *[Rr] *[Aa]

  # Mails larger than 300 KB are accepted without spam-checking to save resources.
  # Message scanning time grows exponentially in the size of the message and goes timeout
  # after 2~5 minutes, while typical spam has only a few KB in size.
  #
  accept  condition = ${if >={$message_size}{300k}{yes}{no}}
          remove_header = X-Spam-Flag : X-Spam-Score : X-Spam-Status : X-Spam-Report

  # Pass missing spam score and report data to routers and transports, but do not reject anything yet.
  # Also, if set, remove X-Spam-* headers here: we will add our own ones later.
  # NOTE: If the "maildeliver" user does not exist, SpamAssassin will fall back to "nobody" and default
  # settings, with all consequences. You may want to change this user name and/or create a user.
  #
  warn  spam                     = maildeliver:true
        set acl_m_spam_score     = $spam_score
        set acl_m_spam_bar       = $spam_bar
        set acl_m_spam_report    = $spam_report
        # $spam_score_int persists by itself
        remove_header = X-Spam-Flag : X-Spam-Score : X-Spam-Status : X-Spam-Report

  # Reject all mails with more than 15 spam points, REGARDLESS OF INDIVIDUAL USER SETTINGS.
  #
  # deny  message   = This message has been rejected due to spam.
  #      condition = ${if >{$spam_score_int}{150}{true}{false}}

  accept hosts		= 127.0.0.1:+relay_from_hosts
  accept authenticated	= *
